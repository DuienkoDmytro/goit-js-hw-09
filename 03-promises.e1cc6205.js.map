{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAyBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAEJQ,MAAK,SAAAC,GACFC,EAAAd,GAASe,OAAOC,QAAQH,E,IAE1B,SAAAI,GACAH,EAAAd,GAASe,OAAOG,QAAQD,E,IAvCfE,SAASC,cAAc,QA0E/BC,iBAAiB,UA7BtB,SAAgBC,GACdA,EAAEC,iBAEF,IADA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCtB,EAAwBoB,EAAxBpB,MAAOuB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACZC,EAAI,EAAGA,GAAKD,EAAOE,MAAOD,IAAK,CAItC,GAAID,EAAS,EAEX,YADA1B,EAAcE,GAOZwB,EAAS,IACX1B,EAAcyB,EAAMvB,GACpB2B,cAAcC,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector(\"form\");\nconst formData = {};\n\n// function createPromise(position, delay) {\n//   const promise = new Promise((resolve, rejected) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//     } else\n//     {\n//       rejected(`❌ Rejected promise ${position} in ${delay}ms`)\n//     }\n//   })\n//   promise.then(result => {\n//       Notiflix.Notify.success(result);\n//   },\n//     error => {\n//     Notiflix.Notify.failure(error);\n//     }\n//   );\n// };\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n  .then(result => {\n      Notiflix.Notify.success(result);\n  },\n    error => {\n    Notiflix.Notify.failure(error);\n    }\n  );\n}\n\n\nfunction submit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  for (let i = 1; i <= amount.value; i++) {\n   \n      \n    \n    if (amount < 1) {\n      createPromise(delay)\n      return\n    }\n   \n\n    \n\n    if (amount > 1) {\n      createPromise(step, delay);\n      clearInterval(intervalId);\n    }\n      \n  }\n}\n\n// function onInputCreate(e) {\n//   formData[e.target.name] = e.target.value;\n\n//   localStorage.setItem('formData', JSON.stringify(formData));\n// };\n\nform.addEventListener('submit', submit);\n// form.addEventListener('input', onInputCreate);\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","result","$parcel$interopDefault","Notify","success","error","failure","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","step","amount","i","value","clearInterval","intervalId"],"version":3,"file":"03-promises.e1cc6205.js.map"}